"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const aws_sdk_1 = require("aws-sdk");
// import { logger, metrics, tracer } from "../utils";
// import { v4 as uuidv4 } from "uuid";
// import type { Subsegment } from "aws-xray-sdk-core";
const ddbClient = new aws_sdk_1.DynamoDB.DocumentClient();
const tableName = process.env.TABLE_NAME;
async function main(event) {
    const records = event.Records;
    const order = JSON.parse(records[0].body);
    const userId = order.PK.S;
    for (const item of order.orderItems.L) {
        console.log(item);
        const element = item.M.sk;
        const params = {
            TableName: tableName,
            Key: {
                PK: `${userId}`,
                SK: `${element.S}`,
            },
            UpdateExpression: "set cartProductStatus = :status, UpdateOn = :Updated",
            ExpressionAttributeValues: {
                ":status": "ORDERED",
                ":Updated": Date.now().toString(),
            },
            ReturnValues: "UPDATED_NEW",
        };
        try {
            const res = await ddbClient.update(params).promise();
            console.log("Response", { res });
        }
        catch (err) {
            // logger.info("Error: ", { err });
        }
    }
    return event;
}
exports.main = main;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVldWVDb25zdW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInF1ZXVlQ29uc3VtZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscUNBQW1DO0FBQ25DLHNEQUFzRDtBQUN0RCx1Q0FBdUM7QUFDdkMsdURBQXVEO0FBRXZELE1BQU0sU0FBUyxHQUFHLElBQUksa0JBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUNoRCxNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQW9CLENBQUM7QUFDNUMsS0FBSyxVQUFVLElBQUksQ0FBQyxLQUFlO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDOUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFMUIsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzFCLE1BQU0sTUFBTSxHQUFHO1lBQ2IsU0FBUyxFQUFFLFNBQVM7WUFDcEIsR0FBRyxFQUFFO2dCQUNILEVBQUUsRUFBRSxHQUFHLE1BQU0sRUFBRTtnQkFDZixFQUFFLEVBQUUsR0FBRyxPQUFPLENBQUMsQ0FBQyxFQUFFO2FBQ25CO1lBQ0QsZ0JBQWdCLEVBQUUsc0RBQXNEO1lBQ3hFLHlCQUF5QixFQUFFO2dCQUN6QixTQUFTLEVBQUUsU0FBUztnQkFDcEIsVUFBVSxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUU7YUFDbEM7WUFDRCxZQUFZLEVBQUUsYUFBYTtTQUM1QixDQUFDO1FBQ0YsSUFBSTtZQUNGLE1BQU0sR0FBRyxHQUFHLE1BQU0sU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyRCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDbEM7UUFBQyxPQUFPLEdBQVksRUFBRTtZQUNyQixtQ0FBbUM7U0FDcEM7S0FDRjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQTdCRCxvQkE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTUVNFdmVudCB9IGZyb20gXCJhd3MtbGFtYmRhXCI7XG5pbXBvcnQgeyBEeW5hbW9EQiB9IGZyb20gXCJhd3Mtc2RrXCI7XG4vLyBpbXBvcnQgeyBsb2dnZXIsIG1ldHJpY3MsIHRyYWNlciB9IGZyb20gXCIuLi91dGlsc1wiO1xuLy8gaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcbi8vIGltcG9ydCB0eXBlIHsgU3Vic2VnbWVudCB9IGZyb20gXCJhd3MteHJheS1zZGstY29yZVwiO1xuXG5jb25zdCBkZGJDbGllbnQgPSBuZXcgRHluYW1vREIuRG9jdW1lbnRDbGllbnQoKTtcbmNvbnN0IHRhYmxlTmFtZSA9IHByb2Nlc3MuZW52LlRBQkxFX05BTUUgYXMgc3RyaW5nO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4oZXZlbnQ6IFNRU0V2ZW50KTogUHJvbWlzZTxTUVNFdmVudD4ge1xuICBjb25zdCByZWNvcmRzID0gZXZlbnQuUmVjb3JkcztcbiAgY29uc3Qgb3JkZXIgPSBKU09OLnBhcnNlKHJlY29yZHNbMF0uYm9keSk7XG4gIGNvbnN0IHVzZXJJZCA9IG9yZGVyLlBLLlM7XG5cbiAgZm9yIChjb25zdCBpdGVtIG9mIG9yZGVyLm9yZGVySXRlbXMuTCkge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0pO1xuICAgIGNvbnN0IGVsZW1lbnQgPSBpdGVtLk0uc2s7XG4gICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgVGFibGVOYW1lOiB0YWJsZU5hbWUsXG4gICAgICBLZXk6IHtcbiAgICAgICAgUEs6IGAke3VzZXJJZH1gLFxuICAgICAgICBTSzogYCR7ZWxlbWVudC5TfWAsXG4gICAgICB9LFxuICAgICAgVXBkYXRlRXhwcmVzc2lvbjogXCJzZXQgY2FydFByb2R1Y3RTdGF0dXMgPSA6c3RhdHVzLCBVcGRhdGVPbiA9IDpVcGRhdGVkXCIsXG4gICAgICBFeHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7XG4gICAgICAgIFwiOnN0YXR1c1wiOiBcIk9SREVSRURcIixcbiAgICAgICAgXCI6VXBkYXRlZFwiOiBEYXRlLm5vdygpLnRvU3RyaW5nKCksXG4gICAgICB9LFxuICAgICAgUmV0dXJuVmFsdWVzOiBcIlVQREFURURfTkVXXCIsXG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZGRiQ2xpZW50LnVwZGF0ZShwYXJhbXMpLnByb21pc2UoKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiUmVzcG9uc2VcIiwgeyByZXMgfSk7XG4gICAgfSBjYXRjaCAoZXJyOiB1bmtub3duKSB7XG4gICAgICAvLyBsb2dnZXIuaW5mbyhcIkVycm9yOiBcIiwgeyBlcnIgfSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBldmVudDtcbn1cbiJdfQ==